#include <Windows.h>
#include <iostream>
#include <string>
#include <atlbase.h>
#include <comdef.h>

int main() {
    CoInitialize(nullptr);

    HRESULT hr = S_OK;
    INetFwPolicy2* fwPolicy2 = nullptr;
    hr = CoCreateInstance(__uuidof(NetFwPolicy2), nullptr, CLSCTX_INPROC_SERVER, __uuidof(INetFwPolicy2), (void**)&fwPolicy2);
    if (FAILED(hr)) {
        std::cout << "Failed to create INetFwPolicy2 instance." << std::endl;
        CoUninitialize();
        return hr;
    }

    INetFwRules* rules = nullptr;
    hr = fwPolicy2->get_Rules(&rules);
    if (FAILED(hr)) {
        std::cout << "Failed to get firewall rules." << std::endl;
        fwPolicy2->Release();
        CoUninitialize();
        return hr;
    }

    long count = 0;
    hr = rules->get_Count(&count);
    if (FAILED(hr)) {
        std::cout << "Failed to get rule count." << std::endl;
        rules->Release();
        fwPolicy2->Release();
        CoUninitialize();
        return hr;
    }

    for (long i = 0; i < count; ++i) {
        INetFwRule* rule = nullptr;
        hr = rules->Item(i, &rule);
        if (FAILED(hr)) {
            std::cout << "Failed to get rule at index " << i << std::endl;
            continue;
        }

        BSTR name = nullptr;
        hr = rule->get_Name(&name);
        if (SUCCEEDED(hr)) {
            std::wstring ruleName(name);
            if (ruleName == L"20000-20005") {
                BSTR newScope = SysAllocString(L"[New Scope CIDR]"); // Replace with your desired new scope
                if (newScope) {
                    hr = rule->put_RemoteAddresses(newScope);
                    if (SUCCEEDED(hr)) {
                        std::wcout << L"Scope modified for rule " << ruleName << std::endl;
                    }
                    SysFreeString(newScope);
                }
            }
            SysFreeString(name);
        }
        rule->Release();
    }

    rules->Release();
    fwPolicy2->Release();
    CoUninitialize();

    return 0;
}
